/*
  myshader.frag
  MyCppGame
  Created by guanghui on 4/8/14.
http://www.idevgames.com/forums/thread-3010.html
*/

varying vec4 v_fragmentColor;

uniform sampler2D texture;
uniform float time;
varying vec2 v_texCoord;
uniform vec2 resolution;
const float radius = 10.0;
const vec3 glowColor = vec3(0.9, 0.2, 0.0);
/*
void main()
{
    float radius = 0.2;
    vec4 accum = vec4(0.0);
    vec4 normal = vec4(0.0);

    normal = texture2D(texture, vec2(v_texCoord.x, v_texCoord.y));


    accum += texture2D(texture, vec2(v_texCoord.x - radius, v_texCoord.y-radius));
    accum += texture2D(texture, vec2(v_texCoord.x + radius, v_texCoord.y-radius));
    accum += texture2D(texture, vec2(v_texCoord.x + radius, v_texCoord.y+radius));
    accum += texture2D(texture, vec2(v_texCoord.x - radius, v_texCoord.y+radius));

   // accum *= 1.75;

    accum.r = 1.0;
    accum.g = 1.0;
    accum.b = 0.0;

    normal = (accum * (1.0 - normal.a)) + (normal * normal.a);
//normal = accum + normal.a*(normal-accum)
    gl_FragColor = v_fragmentColor * normal;
}
*/
float coefficient()
{
	float v = mod(time, 3.0);
    if(v > 1.5)
        v = 3.0 - v;
    return v;
}
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy / resolution.xy;
    vec2 unit = 1.0 / resolution.xy;
    vec4 texColor = texture2D(texture, uv);
    vec4 finalColor = vec4(0.0);
    vec4 density =0.0;

   	if(texColor.a >= 1.0){
        finalColor = vec4(texColor.rgb, 1.0);
    }
    else{
        for(int i = 0; i < int(radius); ++i){
            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;
            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;
            density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;
            density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;

            //density += texture(texture, vec2(uv.x - unit.x * i, uv.y)).a;
            //density += texture(texture, vec2(uv.x + unit.x * i, uv.y)).a;
            //density += texture(texture, vec2(uv.x, uv.y - unit.y * i)).a;
            //density += texture(texture, vec2(uv.x, uv.y + unit.y * i)).a;

        }
        finalColor = vec4(glowColor * density / radius * coefficient(), 1.0);
     //   finalColor += vec4(texColor.rgb* texColor.a, texColor.a);
    }
	fragColor = finalColor;
}
void main()
{
    mainImage(gl_FragColor, gl_FragCoord.xy);
}
